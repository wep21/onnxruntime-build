name: Build ONNX Runtime

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'ONNX Runtime version to build'
        required: true
        default: '1.15.1'

jobs:
  build:
    runs-on: ubuntu-24.04

    container:
      image: nvcr.io/nvidia/tensorrt:23.04-py3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            build-essential \
            cmake \
            python3 \
            python3-pip \
            git \
            wget \
            libprotobuf-dev \
            protobuf-compiler \
            libssl-dev
          python3 -m pip install --upgrade pip
          python3 -m pip install cmake numpy

      - name: Clone ONNX Runtime
        run: |
          git clone --branch v${{ github.event.inputs.version }} https://github.com/microsoft/onnxruntime.git
          cd onnxruntime
          git submodule update --init --recursive

      - name: Configure build
        run: |
          cd onnxruntime
          ./build.sh --config Release --use_cuda --cuda_home=/usr/local/cuda \
            --cudnn_home=/usr/lib/x86_64-linux-gnu --use_tensorrt --tensorrt_home=/usr \
            --parallel $(nproc) --build_shared_lib --enable_pybind --build_wheel --allow_running_as_root

      - name: Archive build artifacts
        run: |
          cd onnxruntime/build/Linux/Release
          tar -czvf onnxruntime-${{ github.event.inputs.version }}-linux-x64-cuda12.tgz .
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: onnxruntime-${{ github.event.inputs.version }}-linux-x64-cuda12
          path: onnxruntime/build/Linux/Release/onnxruntime-${{ github.event.inputs.version }}-linux-x64-cuda12.tgz
